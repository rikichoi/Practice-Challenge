{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suzuk\\\\Projects\\\\prac\\\\frontend\\\\prac-chall\\\\src\\\\components\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, CardContent, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Center from './Center';\nimport useForm from '../hooks/useForm';\nimport useFormUsername from '../hooks/useFormUsername';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getUsername = () => ({\n  username: ''\n});\n\nconst getFreshModel = () => ({\n  name: '',\n  email: ''\n});\n\nexport default function SignUp() {\n  _s();\n\n  let navigate = useNavigate();\n\n  const validate = () => {\n    let temp = {};\n    temp.email = /\\S+@\\S+\\.\\S+/.test(values.email) ? \"\" : \"Email is not valid.\";\n    temp.name = values.name !== \"\" ? \"\" : \"This field is required.\";\n    temp.username = values.username !== \"\" ? \"\" : \"This field is required.\";\n    setErrors(temp);\n    setErrorMsg(temp);\n    return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(getFreshModel);\n  const {\n    input,\n    setInput,\n    errorMsg,\n    setErrorMsg,\n    handleInputUsername\n  } = useFormUsername(getUsername);\n\n  const login = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      console.log(values);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            my: 3\n          },\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& .MuiTextField-root': {\n              m: 1,\n              width: '90%'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"off\",\n            onSubmit: login,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleInputChange,\n              variant: \"outlined\",\n              ...(errors.email && {\n                error: true,\n                helperText: errors.email\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Username\",\n              name: \"username\",\n              value: input.username,\n              onChange: handleInputUsername,\n              variant: \"outlined\",\n              ...(errorMsg.username && {\n                error: true,\n                helperText: errorMsg.username\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              name: \"name\",\n              type: \"password\",\n              value: values.name,\n              onChange: handleInputChange,\n              variant: \"outlined\",\n              ...(errors.name && {\n                error: true,\n                helperText: errors.name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                width: '90%',\n                m: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              onClick: () => navigate('/'),\n              sx: {\n                width: '90%'\n              },\n              children: \"Return\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SignUp, \"OICYYWvK9TxADnqERYMfhx/SZeQ=\", false, function () {\n  return [useNavigate, useForm, useFormUsername];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","Button","Card","CardContent","TextField","Typography","Box","Center","useForm","useFormUsername","useNavigate","getUsername","username","getFreshModel","name","email","SignUp","navigate","validate","temp","test","values","setErrors","setErrorMsg","Object","every","x","setValues","errors","handleInputChange","input","setInput","errorMsg","handleInputUsername","login","e","preventDefault","console","log","width","textAlign","my","m","error","helperText"],"sources":["C:/Users/suzuk/Projects/prac/frontend/prac-chall/src/components/SignUp.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, Card, CardContent, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport Center from './Center';\r\nimport useForm from '../hooks/useForm';\r\nimport useFormUsername from '../hooks/useFormUsername';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst getUsername= () => ({\r\n    username:'',\r\n})\r\n\r\nconst getFreshModel= () => ({\r\n    name:'',\r\n    email:''\r\n})\r\n\r\nexport default function SignUp() {\r\n\r\nlet navigate = useNavigate();\r\n\r\n\r\nconst validate = () => {\r\n    let temp = {}\r\n    temp.email = (/\\S+@\\S+\\.\\S+/).test(values.email)?\"\":\"Email is not valid.\"\r\n    temp.name = values.name!==\"\"?\"\":\"This field is required.\"\r\n    temp.username = values.username!==\"\"?\"\":\"This field is required.\"\r\n    setErrors(temp);\r\n    setErrorMsg(temp);\r\n    return Object.values(temp).every(x => x === \"\")\r\n}\r\n\r\n    const {        \r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n    } = useForm(getFreshModel);\r\n\r\n    const {        \r\n        input,\r\n        setInput,\r\n        errorMsg,\r\n        setErrorMsg,\r\n        handleInputUsername,\r\n    } = useFormUsername(getUsername);\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            console.log(values);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n      <Center>\r\n          <Card sx={{ width: 400 }}>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                  <Typography variant=\"h3\" sx={{ my: 3 }}>\r\n                      Sign Up\r\n                  </Typography>\r\n                  <Box sx={{\r\n                      '& .MuiTextField-root': {\r\n                          m: 1,\r\n                          width: '90%'\r\n                      }\r\n                  }}>\r\n                      <form noValidate autoComplete=\"off\" onSubmit={login}>\r\n                          <TextField\r\n                              label=\"Email\"\r\n                              name=\"email\"\r\n                              value={values.email}\r\n                              onChange={handleInputChange}\r\n                              variant=\"outlined\"\r\n                              {...(errors.email && {error:true, helperText:errors.email})}\r\n                              />\r\n                          <TextField\r\n                              label=\"Username\"\r\n                              name=\"username\"\r\n                              value={input.username}\r\n                              onChange={handleInputUsername}\r\n                              variant=\"outlined\"\r\n                              {...(errorMsg.username && {error:true, helperText:errorMsg.username})}\r\n                              />\r\n                          <TextField\r\n                              label=\"Password\"\r\n                              name=\"name\"\r\n                              type='password'\r\n                              value={values.name}\r\n                              onChange={handleInputChange}\r\n                              variant=\"outlined\"\r\n                              {...(errors.name && {error:true, helperText:errors.name})}\r\n                              />\r\n                          <Button\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              sx={{ width: '90%', m: 2  }}>Sign Up</Button>\r\n                          <Button\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              onClick={() => navigate('/')}\r\n                              sx={{ width: '90%' }}>Return</Button>\r\n                      </form>\r\n                  </Box>\r\n              </CardContent>\r\n          </Card>\r\n      </Center>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}