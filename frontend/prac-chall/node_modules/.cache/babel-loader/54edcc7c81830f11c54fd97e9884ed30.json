{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suzuk\\\\Projects\\\\prac\\\\frontend\\\\prac-chall\\\\src\\\\components\\\\Entry.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, CardContent, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Center from './Center';\nimport useForm from '../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFreshModel = () => ({\n  name: '',\n  email: ''\n});\n\nexport default function Entry() {\n  _s();\n\n  const validate = () => {\n    let temp = {};\n    temp.email = /\\S+@\\S+\\.\\S+/.test(values.email) ? \"\" : \"Email is not valid.\";\n    temp.name = values.name !== \"\" ? \"\" : \"This field is required.\";\n    setErrors(temp);\n    return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(getFreshModel);\n\n  const login = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      console.log(values);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            my: 3\n          },\n          children: \"Practice Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& .MuiTextField-root': {\n              m: 1,\n              width: '90%'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              width: '90%'\n            },\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              width: '90%'\n            },\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Entry, \"shMn0vhLoIL7HZKC8bZc1+z8Mnc=\", false, function () {\n  return [useForm];\n});\n\n_c = Entry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"names":["React","Button","Card","CardContent","TextField","Typography","Box","Center","useForm","getFreshModel","name","email","Entry","validate","temp","test","values","setErrors","Object","every","x","setValues","errors","handleInputChange","login","e","preventDefault","console","log","width","textAlign","my","m"],"sources":["C:/Users/suzuk/Projects/prac/frontend/prac-chall/src/components/Entry.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, Card, CardContent, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport Center from './Center';\r\nimport useForm from '../hooks/useForm';\r\n\r\nconst getFreshModel= () => ({\r\n    name:'',\r\n    email:''\r\n})\r\n\r\nexport default function Entry() {\r\n\r\nconst validate = () => {\r\n    let temp = {}\r\n    temp.email = (/\\S+@\\S+\\.\\S+/).test(values.email)?\"\":\"Email is not valid.\"\r\n    temp.name = values.name!==\"\"?\"\":\"This field is required.\"\r\n    setErrors(temp);\r\n    return Object.values(temp).every(x => x === \"\")\r\n}\r\n\r\n    const {        \r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange\r\n    } = useForm(getFreshModel);\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            console.log(values);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n      <Center>\r\n          <Card sx={{ width: 400 }}>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                  <Typography variant=\"h3\" sx={{ my: 3 }}>\r\n                      Practice Challenge\r\n                  </Typography>\r\n                  <Box sx={{\r\n                      '& .MuiTextField-root': {\r\n                          m: 1,\r\n                          width: '90%'\r\n                      }\r\n                  }}>\r\n                        <Button\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              sx={{ width: '90%' }}>\r\n                        \r\n                        Log In\r\n                              \r\n                        </Button>\r\n                        <Button\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              sx={{ width: '90%' }}>Log In</Button>\r\n                              \r\n                  </Box>\r\n              </CardContent>\r\n          </Card>\r\n      </Center>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,eAAjE;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,MAAMC,aAAa,GAAE,OAAO;EACxBC,IAAI,EAAC,EADmB;EAExBC,KAAK,EAAC;AAFkB,CAAP,CAArB;;AAKA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAEhC,MAAMC,QAAQ,GAAG,MAAM;IACnB,IAAIC,IAAI,GAAG,EAAX;IACAA,IAAI,CAACH,KAAL,GAAc,cAAD,CAAiBI,IAAjB,CAAsBC,MAAM,CAACL,KAA7B,IAAoC,EAApC,GAAuC,qBAApD;IACAG,IAAI,CAACJ,IAAL,GAAYM,MAAM,CAACN,IAAP,KAAc,EAAd,GAAiB,EAAjB,GAAoB,yBAAhC;IACAO,SAAS,CAACH,IAAD,CAAT;IACA,OAAOI,MAAM,CAACF,MAAP,CAAcF,IAAd,EAAoBK,KAApB,CAA0BC,CAAC,IAAIA,CAAC,KAAK,EAArC,CAAP;EACH,CAND;;EAQI,MAAM;IACFJ,MADE;IAEFK,SAFE;IAGFC,MAHE;IAIFL,SAJE;IAKFM;EALE,IAMFf,OAAO,CAACC,aAAD,CANX;;EAQA,MAAMe,KAAK,GAAGC,CAAC,IAAI;IACfA,CAAC,CAACC,cAAF;;IACA,IAAGb,QAAQ,EAAX,EAAc;MACVc,OAAO,CAACC,GAAR,CAAYZ,MAAZ;IACH;EACJ,CALD;;EAQA,oBACE,QAAC,MAAD;IAAA,uBACI,QAAC,IAAD;MAAM,EAAE,EAAE;QAAEa,KAAK,EAAE;MAAT,CAAV;MAAA,uBACI,QAAC,WAAD;QAAa,EAAE,EAAE;UAAEC,SAAS,EAAE;QAAb,CAAjB;QAAA,wBACI,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAyB,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAN,CAA7B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAII,QAAC,GAAD;UAAK,EAAE,EAAE;YACL,wBAAwB;cACpBC,CAAC,EAAE,CADiB;cAEpBH,KAAK,EAAE;YAFa;UADnB,CAAT;UAAA,wBAMM,QAAC,MAAD;YACM,IAAI,EAAC,QADX;YAEM,OAAO,EAAC,WAFd;YAGM,IAAI,EAAC,OAHX;YAIM,EAAE,EAAE;cAAEA,KAAK,EAAE;YAAT,CAJV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QANN,eAeM,QAAC,MAAD;YACM,IAAI,EAAC,QADX;YAEM,OAAO,EAAC,WAFd;YAGM,IAAI,EAAC,OAHX;YAIM,EAAE,EAAE;cAAEA,KAAK,EAAE;YAAT,CAJV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAfN;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAiCH;;GA3DuBjB,K;UAgBhBJ,O;;;KAhBgBI,K"},"metadata":{},"sourceType":"module"}